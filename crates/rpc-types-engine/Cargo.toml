[package]
name = "linera-alloy-rpc-types-engine"
description = "Ethereum execution-consensus layer (engine) API RPC types"

version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
authors.workspace = true
repository.workspace = true
exclude.workspace = true

[lints]
workspace = true

[dependencies]
# ethereum
alloy-rlp = { workspace = true, features = ["arrayvec", "derive"] }
linera-alloy-primitives = { workspace = true, features = ["rlp", "serde"] }
linera-alloy-consensus = { workspace = true, features = ["std"] }
linera-alloy-rpc-types.workspace = true
linera-alloy-serde.workspace = true
linera-alloy-eips = { workspace = true, features = ["serde"] }

# ssz
ethereum_ssz_derive = { workspace = true, optional = true }
ethereum_ssz = { workspace = true, optional = true }

serde = { workspace = true, features = ["derive"] }
thiserror.workspace = true

# jsonrpsee
jsonrpsee-types = { version = "0.22", optional = true }

# jwt
jsonwebtoken = "9.3.0"
rand.workspace = true

[features]
jsonrpsee-types = ["dep:jsonrpsee-types"]
ssz = [
    "dep:ethereum_ssz",
    "dep:ethereum_ssz_derive",
    "linera-alloy-primitives/ssz",
    "linera-alloy-rpc-types/ssz",
    "linera-alloy-eips/ssz",
]
kzg = ["linera-alloy-consensus/kzg"]

[dev-dependencies]
linera-alloy-primitives = { workspace = true, features = [
    "rand",
    "rlp",
    "serde",
    "arbitrary",
] }

arbitrary = { workspace = true, features = ["derive"] }
rand.workspace = true
serde_json.workspace = true
similar-asserts.workspace = true
tempfile.workspace = true
assert_matches.workspace = true
